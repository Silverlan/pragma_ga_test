name: Build Windows
on:
  push:
    branches: [ main, master, actions ]
  pull_request:
    branches: [ main, master, actions ]

concurrency:
  group: environment-${{ github.ref }}
  cancel-in-progress: true


jobs:
  build:
    name: Build - ${{ matrix.config.os }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
          - os: windows-latest
            name: "Windows x64 MSVC"
            artifact: "Windows-MSVC.tar.xz"
            build_type: "RelWithDebInfo"
            environment_script: "C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise/VC/Auxiliary/Build/vcvars64.bat"
            cc: "cl"
            cxx: "cl"
            archiver: "7z a"
            generators: "Visual Studio 17 2022"
            build_dir: 'build'
    steps:
      - name: Install zip
        shell: bash
        run:   |
          choco install zip
    
      - name: New tag text
        shell: bash
        run:   |
          curDate=$(date -u '+%Y-%m-%d %H:%M:%S %Z')
          printf "This is an auto-generated pre-release, built from the latest version of the source code.\nIt includes all files necessary to run Pragma, as well as the latest version of the Pragma Filmmaker, however functionality and stability are **not** guaranteed.\n\nLatest release date: $curDate" > tag_text.txt
    
      - uses: robinraju/release-downloader@v1.3
        with: 
          repository: "Silverlan/pragma"
          tag: "nightly"
          fileName: "pragma.zip"
          out-file-path: "."
          
      - name: New tag text
        shell: bash
        run:   |
          ls -R
          response=$(curl --write-out '%{http_code}' --silent --output /dev/null -v -F filename=pragma.zip -F upload=@pragma.zip https://wiki.pragma-engine.com/test_git/test_upload_file.php?secret=wJh2cyDOwwNm69qiN8sc)
          echo "Response: $response"
      #- name: New tag text
      #  shell: bash
      #  run:   |
      #    ls -R
      #    zip -ur ./pragma.zip tag_text.txt
          
      #- name: Update nightly release
      #  uses: pyTooling/Actions/releaser/composite@main
      #  with:
      #    tag: nightly
      #    rm: true
      #    token: ${{ secrets.GITHUB_TOKEN }}
      #    files: "pragma.zip"
    
